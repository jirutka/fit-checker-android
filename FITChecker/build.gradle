import groovy.swing.SwingBuilder

apply plugin: 'android'

//to get release signing password from console
task readPasswordFromInput << {
	android.signingConfigs.release.storePassword = ''
	if (System.console() == null) {
		new SwingBuilder().edt {
			dialog(modal: true, // Otherwise the build will continue running before you closed the dialog
					title: 'Enter keystore password', // Dialog title
					alwaysOnTop: true, // pretty much what the name says
					resizable: false, // Don't allow the user to resize the dialog
					locationRelativeTo: null, // Place dialog in center of the screen
					pack: true, // We need to pack the dialog (so it will take the size of it's children)
					show: true // Let's show it
			) {
				vbox { // Put everything below each other
					label(text: "Enter keystore password:")
					input = passwordField()
					button(defaultButton: true, text: 'OK', actionPerformed: {
						android.signingConfigs.release.storePassword = new String(input.password);
						// Set pass variable to value of input field
						dispose(); // Close dialog
					})
				} // vbox end
			} // dialog end
		} // edt end

		new SwingBuilder().edt {
			dialog(modal: true, // Otherwise the build will continue running before you closed the dialog
					title: 'Enter password', // Dialog title
					alwaysOnTop: true, // pretty much what the name says
					resizable: false, // Don't allow the user to resize the dialog
					locationRelativeTo: null, // Place dialog in center of the screen
					pack: true, // We need to pack the dialog (so it will take the size of it's children)
					show: true // Let's show it
			) {
				vbox { // Put everything below each other
					label(text: "Enter key password:")
					input = passwordField()
					button(defaultButton: true, text: 'OK', actionPerformed: {
						android.signingConfigs.release.keyPassword = new String(input.password);
						// Set pass variable to value of input field
						dispose(); // Close dialog
					})
				} // vbox end
			} // dialog end
		} // edt end
	} else {
		def console = System.console()
		ext.keystorePassword = console.readLine('\n\n\n> Enter keystore password: ')
		android.signingConfigs.release.storePassword = ext.keystorePassword
		ext.keyPassword = console.readLine('\n\n\n> Enter key password: ')
		android.signingConfigs.release.keyPassword = ext.keyPassword
	}

	if (android.signingConfigs.release.storePassword.size() <= 0) {
		throw new InvalidUserDataException("You must enter a password to proceed.")
	}

}

//do specify tasks on compile time
tasks.whenTaskAdded { task ->
	if (task.name == 'validateReleaseSigning') {//only once per release build (doesn't matter how many flavours)
		task.dependsOn readPasswordFromInput
	} else if (task.name.startsWith("proguard")) {//copy proguard mappings
		task << {
			copy {
				from buildDir.getPath() + "/proguard"
				into '../proguard'
				include '**/mapping.txt'
			}
			println "PPROGUARD FILES COPIED"
		}

	}
}

//android config

android {
	compileSdkVersion 19
	buildToolsVersion '19.0.3'

	defaultConfig {
		minSdkVersion 9
		targetSdkVersion 19
		versionName mVersion //value from gradle.properties (it is available automatically)
		versionCode getGitCommits()//value from gradle.properties
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_7
		targetCompatibility JavaVersion.VERSION_1_7
	}
	signingConfigs {
		release {
			keyAlias mKeyAlias
			storeFile file(mKeyFile)
			storePassword ""
			keyPassword ""
		}
	}

	buildTypes {
		debug {
//automatically marks src/debug as a source folders in addition to src/main if used and if the folder exists
			versionNameSuffix " " + getShortCommitHash()
			packageNameSuffix ".debug"
		}
		release {
//automatically marks src/release as a source folders in addition to src/main if used and if the folder exists
			runProguard true
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), file('proguard-project.txt')
			signingConfig signingConfigs.release
		}
	}
}

dependencies {
    compile 'com.squareup:otto:1.3.4'
    compile 'com.android.support:support-annotations:+'
    compile 'com.j256.ormlite:ormlite-android:4.48@jar'
    compile 'com.j256.ormlite:ormlite-core:4.48@jar'
    compile 'com.android.support:support-v4:19.1.+'
    compile 'com.android.support:appcompat-v7:+'
    compile 'com.jakewharton:butterknife:5.+'
    compile 'com.viewpagerindicator:library:2.4.1@aar'

}
